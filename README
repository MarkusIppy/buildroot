Buildroot is a simple, efficient and easy-to-use tool to generate embedded
Linux systems through cross-compilation.

The documentation can be found in docs/manual. You can generate a text
document with 'make manual-text' and read output/docs/manual/manual.text.
Online documentation can be found at http://buildroot.org/docs.html

To build and use the buildroot stuff, do the following:

1) run 'make menuconfig'
2) select the target architecture and the packages you wish to compile
3) run 'make'
4) wait while it compiles
5) find the kernel, bootloader, root filesystem, etc. in output/images

You do not need to be root to build or run buildroot.  Have fun!

Buildroot comes with a basic configuration for a number of boards. Run
'make list-defconfigs' to view the list of provided configurations.

Please feed suggestions, bug reports, insults, and bribes back to the
buildroot mailing list: buildroot@buildroot.org
You can also find us on #buildroot on Freenode IRC.

If you would like to contribute patches, please read
https://buildroot.org/manual.html#submitting-patches


How to build your PowerTune image (Pi2 & PI3 only )


Open a terminal in Linux 

$ git clone https://github.com/MarkusIppy/buildroot.git
$ cd buildroot
$ make powertune_rpi3_defconfig
If you use another screen than the official pi Screen , edit the following file 
$ nano /buildroot/board/powertune/rpi3/rootfs/profile.d/qt5-env.sh

Press "Ctrl+x" when you finished modifing the file and plress "y" to save

$ make



This will download all required sourcecode into a seperate folder called "dl"
Once the compilation has finished it will create a pi image called "powertune.img" in the folder
/buildroot/output/images

Flash the image to your SD card ( you can user Etcher or do it via command Line ) 
Etcher can be downloaded her https://etcher.io/

The image currently has a boot time of approx 17 seconds until PowerTune is starting ( i am still working on optimization ) 

About the image :
The username and password are :

user: root
pw: root

Not all linux commands are supported and there is no need to use sudo 

Should you wish to use Wlan :

quit powertune 

login with username and password

Type the following :

$nano /etc/network/wpa_supplicant.conf

Enter your WLAN SSID and Password 

Press "Ctrl+x" then press "y" to save

$reboot

Now your pi will always log into WLAN at boot 







